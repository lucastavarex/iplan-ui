{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast-story",
  "type": "registry:ui",
  "title": "Toast Story",
  "registryDependencies": [
    "toast"
  ],
  "files": [
    {
      "path": "registry/toast.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\";\n\nimport {\n  Toast,\n  ToastAction,\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { useToast } from \"@/hooks/use-toast\";\n\n/**\n * A succinct message that is displayed temporarily.\n */\nconst meta = {\n  title: \"ui/Toast\",\n  component: Toast,\n  tags: [\"autodocs\"],\n  argTypes: {},\n  parameters: {\n    layout: \"centered\",\n  },\n  render: (args) => {\n    const { toast } = useToast();\n    return (\n      <div>\n        <button\n          onClick={() => {\n            toast(args);\n          }}\n        >\n          Show Toast\n        </button>\n        <Toaster />\n      </div>\n    );\n  },\n} satisfies Meta<typeof Toast>;\n\nexport default meta;\n\ntype Story = Omit<StoryObj<typeof meta>, \"args\"> & {\n  args: Omit<ToasterToast, \"id\">;\n};\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: string;\n  description?: string;\n  action?: ToastActionElement;\n};\n\n/**\n * The default form of the toast.\n */\nexport const Default: Story = {\n  args: {\n    description: \"Your message has been sent.\",\n  },\n};\n\n/**\n * Use the `title` prop to provide a title for the toast.\n */\nexport const WithTitle: Story = {\n  args: {\n    title: \"Uh oh! Something went wrong.\",\n    description: \"There was a problem with your request.\",\n  },\n};\n\n/**\n * Use the `action` prop to provide an action for the toast.\n */\nexport const WithAction: Story = {\n  args: {\n    title: \"Uh oh! Something went wrong.\",\n    description: \"There was a problem with your request.\",\n    action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\n  },\n};\n\n/**\n * Use the `destructive` variant to indicate a destructive action.\n */\nexport const Destructive: Story = {\n  args: {\n    variant: \"destructive\",\n    title: \"Uh oh! Something went wrong.\",\n    description: \"There was a problem with your request.\",\n    action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\n  },\n};\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "story": "ui-toast"
  }
}